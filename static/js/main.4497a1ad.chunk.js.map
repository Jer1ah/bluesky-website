{"version":3,"sources":["img/rain.svg","img/cloudy-night.svg","img/moon.svg","img/snow.svg","img/thunderstorm.svg","img/cloudy.svg","img/sun.svg","img/clouds.svg","reducers/index.js","actions/index.js","components/Header.js","components/CurrentWeather.js","components/HourForecast.js","components/HourlyForecast.js","components/DailyForecast.js","components/WeeklyForecast.js","components/App.js","index.js"],"names":["module","exports","combineReducers","currentDate","state","action","type","payload","currentHours","days","currentWeather","hourlyForecast","weeklyForecast","userInput","locationInfo","locationKey","getCurrentWeather","key","dispatch","a","axios","get","data","getHourlyForecast","getWeeklyWeather","Header","props","getWeather","zipcode","getLocationInfo","textInput","React","createRef","this","getCurrentDate","nextProps","className","currentCity","currentState","placeholder","ref","onClick","current","value","Component","connect","AdministrativeArea","LocalizedName","ID","Key","moment","format","updateZipcode","updateLocationKey","CurrentWeather","weatherIcon","sunnyIcon","partlyCloudyIcon","cloudsIcon","rainIcon","thunderstormIcon","snowIcon","moonIcon","partlyCloudyNightIcon","src","alt","currentTemp","currentCondition","realfeel","wind","humidity","windGust","WeatherIcon","Temperature","Imperial","Value","WeatherText","RealFeelTemperature","Math","ceil","Wind","Speed","WindGust","RelativeHumidity","hourForecast","hour","temperature","HourlyForecast","getCurrentHours","currentTemps","map","index","HourForecast","floor","EpochDateTime","add","dailyForecast","day","highTemp","lowTemp","rain","WeeklyForecast","getWeeklyForecast","daily","dailyConditions","Day","Icon","DailyForecast","Minimum","Maximum","RainProbability","EpochDate","DailyForecasts","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4497a1ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rain.c59a6525.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-night.dc0f2f9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.ab4f3dc9.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.66fc4ff7.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm.926dad6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.ee81fe3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.240fa36a.svg\";","module.exports = __webpack_public_path__ + \"static/media/clouds.3626d665.svg\";","import { combineReducers } from 'redux';\n\nconst dateReducer = (state='', action) => {\n    switch(action.type) {\n        case 'GET_DATE':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nconst hourReducer = (state=[], action) => {\n    switch (action.type) {\n        case 'GET_HOURS':\n            return action.payload;\n        default: \n            return state;\n    }\n};\n\nconst dayReducer = (state=[], action) => {\n    switch (action.type) {\n        case 'GET_DAYS':\n            return action.payload;\n        default: \n            return state;\n    }\n};\n\nconst currentWeatherReducer = (state={}, action) => {\n    switch(action.type) {\n        case 'GET_CURRENT_WEATHER':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nconst hourlyForecastReducer = (state=[], action) => {\n    switch(action.type) {\n        case 'GET_HOURLY':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nconst weeklyForecastReducer = (state=[], action) => {\n    switch(action.type) {\n        case \"GET_WEEKLY_FORECAST\":\n            return action.payload\n        default:\n            return state;\n    }\n};\n\nconst userInputReducer = (state='', action) => {\n    switch(action.type) {\n        case 'GET_INPUT':\n            return action.payload;\n        default:\n            return state;\n    };\n};\n\nconst locationReducer = (state={}, action) => {\n    switch(action.type) {\n        case \"GET_LOCATION\":\n            return action.payload;\n        default: \n            return state;\n    }\n};\n\nconst locationKeyReducer = (state='11727_PC', action) => {\n    switch(action.type) {\n        case \"GET_KEY\":\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nexport default combineReducers({\n    currentDate: dateReducer,\n    currentHours: hourReducer,\n    days: dayReducer,\n    currentWeather: currentWeatherReducer,\n    hourlyForecast: hourlyForecastReducer,\n    weeklyForecast: weeklyForecastReducer,\n    userInput: userInputReducer,\n    locationInfo: locationReducer,\n    locationKey: locationKeyReducer\n});","import moment from 'moment';\nimport axios from 'axios';\n\nexport const getCurrentDate = () => {\n    return {\n        type: 'GET_DATE',\n        payload: moment().format('dddd D MMMM')\n    }\n}\n\nexport const getCurrentHours = () => {\n    return {\n        type: 'GET_HOURS',\n        payload: [ \n            moment().format('ha'),\n            moment().add(1, 'hour').format('ha'), \n            moment().add(2, 'hour').format('ha'), \n            moment().add(3, 'hour').format('ha'),\n            moment().add(4, 'hour').format('ha')\n        ]\n    };\n};\n\nexport const getWeeklyForecast = () => {\n    return {\n        type: 'GET_DAYS',\n        payload: [ \n            moment().add(1, 'days').format('dddd'), \n            moment().add(2, 'days').format('dddd'),\n            moment().add(3, 'days').format('dddd'),\n            moment().add(4, 'days').format('dddd'),\n            moment().add(5, 'days').format('dddd')\n        ]\n    }\n};\n\nexport const getCurrentWeather = (key) => {\n    return async (dispatch) => {\n        const data = await axios.get(`http://dataservice.accuweather.com/currentconditions/v1/${key}?apikey=yjhc9euukkwR393enGgBNNlSaIA1i0T4&details=true`);\n        dispatch({ type: 'GET_CURRENT_WEATHER', payload: data.data[0] });\n    };\n};\n\nexport const getLocationInfo = (zipcode) => {\n    return async (dispatch) => {\n        const data = await axios.get(`http://dataservice.accuweather.com/locations/v1/postalcodes/search?apikey=yjhc9euukkwR393enGgBNNlSaIA1i0T4&q=${zipcode}`);\n        dispatch({ type: \"GET_LOCATION\", payload: data.data[0] });\n    };\n};\n\nexport const updateLocationKey = (key) => {\n    return {\n        type: \"GET_KEY\",\n        payload: key\n    }\n};\n\nexport const getHourlyForecast = (key) => {\n    return async (dispatch) => {\n        const data = await axios.get(`http://dataservice.accuweather.com/forecasts/v1/hourly/12hour/${key}?apikey=yjhc9euukkwR393enGgBNNlSaIA1i0T4`);\n        dispatch({ type: 'GET_HOURLY', payload: data.data });\n    };\n};\n\nexport const getWeeklyWeather = (key) => {\n    return async (dispatch) => {\n        const data = await axios.get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${key}?apikey=yjhc9euukkwR393enGgBNNlSaIA1i0T4&details=true`);\n        dispatch({ type: \"GET_WEEKLY_FORECAST\", payload: data.data });\n    }\n};\n\nexport const updateZipcode = (userInput) => {\n    return {\n        type: 'GET_INPUT',\n        payload: userInput\n    };\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { \n    getCurrentDate, \n    getCurrentWeather, \n    getHourlyForecast,\n    updateZipcode,\n    getLocationInfo,\n    getWeeklyWeather,\n    updateLocationKey\n } from '../actions';\n\nimport '../css/header.css';\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textInput = React.createRef();\n    }\n\n    componentDidMount() {\n        this.props.getCurrentDate();\n        this.props.getLocationInfo(28202);\n        this.props.getCurrentWeather(\"11727_PC\");\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.props.getWeeklyWeather(nextProps.locationKey);\n        this.props.getCurrentWeather(nextProps.locationKey);\n        this.props.getHourlyForecast(nextProps.locationKey);\n    }\n\n    getWeather = (zipcode) => {\n        this.props.getLocationInfo(zipcode);\n    };\n\n    render() {\n        return (\n            <div className='header'>\n                <div className='headerMain'>\n                    <h1>{this.props.currentCity}, {this.props.currentState}</h1>\n                    <h3>{this.props.currentDate}</h3>\n                </div>\n                <div className='headerInput'>\n                    <input type='text' \n                           placeholder='Enter zipcode' \n                           ref={this.textInput} \n                    />\n                    <button onClick={() => this.getWeather(this.textInput.current.value)}>Get Weather</button>\n                </div>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    if(state.locationInfo.AdministrativeArea) {\n        return {\n            currentDate: state.currentDate,\n            currentCity: state.locationInfo.LocalizedName,\n            currentState: state.locationInfo.AdministrativeArea.ID,\n            userInput: state.userInput,\n            locationKey: state.locationInfo.Key\n        }\n    } else {\n        return {};\n    }\n};\n\nexport default connect(mapStateToProps, {\n    getCurrentDate,\n    getCurrentWeather,\n    getHourlyForecast,\n    updateZipcode,\n    getLocationInfo,\n    getWeeklyWeather,\n    updateLocationKey\n})(Header);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getCurrentWeather } from '../actions';\nimport '../css/currentWeather.css';\n\nimport sunnyIcon from '../img/sun.svg';\nimport moonIcon from '../img/moon.svg';\nimport cloudsIcon from '../img/clouds.svg';\nimport partlyCloudyIcon from '../img/cloudy.svg';\nimport partlyCloudyNightIcon from '../img/cloudy-night.svg';\nimport rainIcon from '../img/rain.svg';\nimport thunderstormIcon from '../img/thunderstorm.svg';\nimport snowIcon from '../img/snow.svg';\n\nclass CurrentWeather extends React.Component {\n    render() {\n        let weatherIcon;\n        switch(this.props.weatherIcon) {\n            case 1:\n                weatherIcon = sunnyIcon;\n                break;\n            case 2:\n                weatherIcon = sunnyIcon;\n                break;\n            case 3:\n                weatherIcon = sunnyIcon;\n                break;\n            case 4:\n                weatherIcon = partlyCloudyIcon;\n                break;\n            case 5:\n                weatherIcon = partlyCloudyIcon;\n                break;\n            case 6:\n                weatherIcon = partlyCloudyIcon;\n                break;\n            case 7:\n                weatherIcon = cloudsIcon;\n                break;\n            case 8:\n                weatherIcon = cloudsIcon;\n                break;\n            case 11:\n                weatherIcon = cloudsIcon;\n                break;\n            case 18:\n                weatherIcon = rainIcon;\n                break;\n            case 12:\n                weatherIcon = rainIcon;\n                break;\n            case 13:\n                weatherIcon = rainIcon;\n                break;\n            case 14:\n                weatherIcon = rainIcon;\n                break;\n            case 24:\n                weatherIcon = rainIcon;\n                break;\n            case 25:\n                weatherIcon = rainIcon;\n                break;\n            case 26:\n                weatherIcon = rainIcon;\n                break;\n            case 29:\n                weatherIcon = rainIcon;\n                break;\n            case 15:\n                weatherIcon = thunderstormIcon;\n                break;\n            case 16:\n                weatherIcon = thunderstormIcon;\n                break;\n            case 17:\n                weatherIcon = thunderstormIcon;\n                break;\n            case 19:\n                weatherIcon = snowIcon;\n                break;\n            case 20:\n                weatherIcon = snowIcon;\n                break;\n            case 21:\n                weatherIcon = snowIcon;\n                break;\n            case 22:\n                weatherIcon = snowIcon;\n                break;\n            case 23:\n                weatherIcon = snowIcon;\n                break;\n            case 33:\n                weatherIcon = moonIcon;\n                break;\n            case 34:\n                weatherIcon = moonIcon;\n                break;\n            case 35:\n                weatherIcon = partlyCloudyNightIcon;\n                break;\n            case 36:\n                weatherIcon = partlyCloudyNightIcon;\n                break;\n            case 37:\n                weatherIcon = partlyCloudyNightIcon;\n                break;\n            case 38:\n                weatherIcon = partlyCloudyNightIcon;\n                break;\n            case 39:\n                weatherIcon = rainIcon;\n                break;\n            case 40:\n                weatherIcon = rainIcon;\n                break;\n            case 41:\n                weatherIcon = thunderstormIcon;\n                break;\n            case 42:\n                weatherIcon = thunderstormIcon;\n                break;\n            case 43:\n                weatherIcon = snowIcon;\n                break;\n            case 44:\n                weatherIcon = snowIcon;\n                break;\n            default:\n                weatherIcon = partlyCloudyIcon;\n        }\n        return (\n            <div className='currentWeather'>\n                <div className='currentWeatherMain'>\n                    <img src={weatherIcon} alt='Weather Icon'/>\n                    <div className='currentTemp'>\n                        <h1>{this.props.currentTemp}&deg;</h1>\n                        <h5>{this.props.currentCondition}</h5>\n                    </div> {/* .currentTemp end */}\n                </div> {/* .currentMain end */}\n                <div className='currentWeatherAside'>\n                    <ul className='conditionsList'>\n                        <li className=\"conditionItem\">\n                            <h3>{this.props.realfeel}&deg;</h3>\n                            <h5>Real Feel</h5>\n                        </li>\n                        <li className='conditionItem'>\n                            <h3>{this.props.wind}mph</h3>\n                            <h5>Wind</h5>\n                        </li>\n                        <li className='conditionItem'>\n                            <h3>{this.props.humidity}%</h3>\n                            <h5>Humidity</h5>\n                        </li>\n                        <li className='conditionItem'>\n                            <h3>{this.props.windGust}mph</h3>\n                            <h5>Wind Gust</h5>\n                        </li>\n                    </ul>\n                </div> {/* .currentAside end */}\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    if(state.currentWeather.WeatherIcon) {\n        return {\n            currentTemp: state.currentWeather.Temperature.Imperial.Value,\n            currentCondition: state.currentWeather.WeatherText,\n            realfeel: state.currentWeather.RealFeelTemperature.Imperial.Value,\n            wind: Math.ceil(state.currentWeather.Wind.Speed.Imperial.Value),\n            windGust: Math.ceil(state.currentWeather.WindGust.Speed.Imperial.Value),\n            humidity: state.currentWeather.RelativeHumidity,\n            weatherIcon: state.currentWeather.WeatherIcon,\n        };\n    } else {\n        return {};\n    }\n};\n\nexport default connect(mapStateToProps, {\n    getCurrentWeather\n})(CurrentWeather);","import React from 'react';\n\nconst hourForecast = ({ hour, temperature, weatherIcon }) => {\n    return (\n        <li className='hourlyForecastListItem'>\n            <h3>{hour}</h3>\n            <img src={weatherIcon} alt='Weather Icon'/>\n            <h5>{temperature}&deg;</h5>\n        </li>\n    );\n};\n\nexport default hourForecast;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport HourForecast from '../components/HourForecast';\nimport { getCurrentHours, getHourlyForecast } from '../actions';\nimport '../css/hourlyForecast.css';\n\nimport sunnyIcon from '../img/sun.svg';\nimport moonIcon from '../img/moon.svg';\nimport cloudsIcon from '../img/clouds.svg';\nimport partlyCloudyIcon from '../img/cloudy.svg';\nimport partlyCloudyNightIcon from '../img/cloudy-night.svg';\nimport rainIcon from '../img/rain.svg';\nimport thunderstormIcon from '../img/thunderstorm.svg';\nimport snowIcon from '../img/snow.svg';\n\nclass HourlyForecast extends React.Component {\n    componentDidMount() {\n        this.props.getHourlyForecast(\"11727_PC\");\n        this.props.getCurrentHours();\n    }\n\n    render() {\n        let hourlyForecast;\n        if( this.props.currentHours && this.props.currentTemps[1] ) {\n            hourlyForecast = this.props.currentHours.map((hour, index) => {\n                let weatherIcon;\n                switch(this.props.currentTemps[index].WeatherIcon) {\n                    case 1:\n                        weatherIcon = sunnyIcon;\n                        break;\n                    case 2:\n                        weatherIcon = sunnyIcon;\n                        break;\n                    case 3:\n                        weatherIcon = sunnyIcon;\n                        break;\n                    case 4:\n                        weatherIcon = partlyCloudyIcon;\n                        break;\n                    case 5:\n                        weatherIcon = partlyCloudyIcon;\n                        break;\n                    case 6:\n                        weatherIcon = partlyCloudyIcon;\n                        break;\n                    case 7:\n                        weatherIcon = cloudsIcon;\n                        break;\n                    case 8:\n                        weatherIcon = cloudsIcon;\n                        break;\n                    case 11:\n                        weatherIcon = cloudsIcon;\n                        break;\n                    case 18:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 12:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 13:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 14:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 24:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 25:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 26:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 29:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 15:\n                        weatherIcon = thunderstormIcon;\n                        break;\n                    case 16:\n                        weatherIcon = thunderstormIcon;\n                        break;\n                    case 17:\n                        weatherIcon = thunderstormIcon;\n                        break;\n                    case 19:\n                        weatherIcon = snowIcon;\n                        break;\n                    case 20:\n                        weatherIcon = snowIcon;\n                        break;\n                    case 21:\n                        weatherIcon = snowIcon;\n                        break;\n                    case 22:\n                        weatherIcon = snowIcon;\n                        break;\n                    case 23:\n                        weatherIcon = snowIcon;\n                        break;\n                    case 33:\n                        weatherIcon = moonIcon;\n                        break;\n                    case 34:\n                        weatherIcon = moonIcon;\n                        break;\n                    case 35:\n                        weatherIcon = partlyCloudyNightIcon;\n                        break;\n                    case 36:\n                        weatherIcon = partlyCloudyNightIcon;\n                        break;\n                    case 37:\n                        weatherIcon = partlyCloudyNightIcon;\n                        break;\n                    case 38:\n                        weatherIcon = partlyCloudyNightIcon;\n                        break;\n                    case 39:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 40:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 41:\n                        weatherIcon = thunderstormIcon;\n                        break;\n                    case 42:\n                        weatherIcon = thunderstormIcon;\n                        break;\n                    case 43:\n                        weatherIcon = snowIcon;\n                        break;\n                    case 44:\n                        weatherIcon = snowIcon;\n                        break;\n                    default:\n                        weatherIcon = partlyCloudyIcon;\n                }\n                return <HourForecast\n                            hour={hour}\n                            weatherIcon={weatherIcon}\n                            temperature={Math.floor(this.props.currentTemps[index].Temperature.Value)}\n                            key={this.props.currentTemps[index].EpochDateTime}\n                        />\n                });\n        }\n\n        return (\n            <div className='hourlyForecast'>\n                <h1>Hourly Forecast</h1>\n                <ul className='hourlyForecastList'>\n                    { hourlyForecast ? hourlyForecast : null }\n                </ul>\n            </div>\n        );\n    }   \n};\n\nconst mapStateToProps = (state) => {\n    return {\n        currentHours: state.currentHours,\n        currentTemps: state.hourlyForecast,\n    } \n};\n\nexport default connect(mapStateToProps, {\n    getCurrentHours,\n    getHourlyForecast\n})(HourlyForecast);\n\n","import React from 'react';\n\nconst dailyForecast = (props) => {\n    return (\n        <li className='weeklyForecastListItem'>\n            <h5 className='day'>{props.day}</h5>\n            <img src={props.weatherIcon} alt='Weather Icon' />\n            <div className='highTemp'>\n                <h4>{props.highTemp}&deg;</h4>\n                <h5>High</h5>\n            </div>\n            <div className='lowTemp'>\n                <h4>{props.lowTemp}&deg;</h4>\n                <h5>Low</h5>\n            </div>\n            <div className='wind'>\n                <h4>{props.wind}mph</h4>\n                <h5>Wind</h5>\n            </div>\n            <div className='rain'>\n                <h4>{props.rain}%</h4>\n                <h5>Rain</h5>\n            </div>\n        </li>\n    );\n};\n\nexport default dailyForecast;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport DailyForecast from '../components/DailyForecast';\nimport { getWeeklyForecast, getWeeklyWeather } from '../actions';\nimport '../css/weeklyForecast.css';\n\nimport sunnyIcon from '../img/sun.svg';\nimport cloudsIcon from '../img/clouds.svg';\nimport partlyCloudyIcon from '../img/cloudy.svg';\nimport rainIcon from '../img/rain.svg';\nimport thunderstormIcon from '../img/thunderstorm.svg';\nimport snowIcon from '../img/snow.svg';\n\nclass WeeklyForecast extends React.Component { \n    componentDidMount() {\n        this.props.getWeeklyForecast();\n        this.props.getWeeklyWeather(\"11727_PC\");\n    }\n\n    render() {\n        let daily;\n        let weatherIcon;\n        if( this.props.dailyConditions ) {\n            daily = this.props.days.map((day, index) => {\n                switch(this.props.dailyConditions[index].Day.Icon) {\n                    case 1:\n                        weatherIcon = sunnyIcon;\n                        break;\n                    case 2:\n                        weatherIcon = sunnyIcon;\n                        break;\n                    case 3:\n                        weatherIcon = sunnyIcon;\n                        break;\n                    case 4:\n                        weatherIcon = partlyCloudyIcon;\n                        break;\n                    case 5:\n                        weatherIcon = partlyCloudyIcon;\n                        break;\n                    case 6:\n                        weatherIcon = partlyCloudyIcon;\n                        break;\n                    case 7:\n                        weatherIcon = cloudsIcon;\n                        break;\n                    case 8:\n                        weatherIcon = cloudsIcon;\n                        break;\n                    case 11:\n                        weatherIcon = cloudsIcon;\n                        break;\n                    case 18:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 12:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 13:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 14:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 24:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 25:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 26:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 29:\n                        weatherIcon = rainIcon;\n                        break;\n                    case 15:\n                        weatherIcon = thunderstormIcon;\n                        break;\n                    case 16:\n                        weatherIcon = thunderstormIcon;\n                        break;\n                    case 17:\n                        weatherIcon = thunderstormIcon;\n                        break;\n                    case 19:\n                        weatherIcon = snowIcon;\n                        break;\n                    case 20:\n                        weatherIcon = snowIcon;\n                        break;\n                    case 21:\n                        weatherIcon = snowIcon;\n                        break;\n                    case 22:\n                        weatherIcon = snowIcon;\n                        break;\n                    case 23:\n                        weatherIcon = snowIcon;\n                        break;\n                    default:\n                        weatherIcon = partlyCloudyIcon;\n                }\n                return <DailyForecast \n                            day={day}\n                            weatherIcon={weatherIcon}\n                            lowTemp={this.props.dailyConditions[index].Temperature.Minimum.Value}\n                            highTemp={this.props.dailyConditions[index].Temperature.Maximum.Value}\n                            wind={Math.ceil(this.props.dailyConditions[index].Day.Wind.Speed.Value)}\n                            rain={this.props.dailyConditions[index].Day.RainProbability}\n                            weatherIcon={weatherIcon}\n                            key={this.props.dailyConditions[index].EpochDate}\n                        />\n            });\n        }\n        return (\n            <div className='weeklyForecast'>\n                <h1>Next 5 Days</h1>\n                <ul className='weeklyForecastList'>\n                    { daily ? daily : null}\n                </ul>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    if( state.weeklyForecast ) {\n    return {\n        days: state.days,\n        dailyConditions: state.weeklyForecast.DailyForecasts\n    };\n    } else {\n        return {};\n    }\n};\n\nexport default connect(mapStateToProps, {\n    getWeeklyForecast,\n    getWeeklyWeather\n})(WeeklyForecast);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from '../reducers';\n\nimport Header from './Header';\nimport CurrentWeather from './CurrentWeather';\nimport HourlyForecast from './HourlyForecast';\nimport WeeklyForecast from './WeeklyForecast';\n\nimport '../css/main.css';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <div className='app'>\n                <Header />\n                <CurrentWeather />\n                <HourlyForecast />\n                <WeeklyForecast />\n            </div>\n        </Provider>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}