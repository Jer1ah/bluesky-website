{"version":3,"sources":["img/rain.svg","img/moon.svg","img/cloudy.svg","img/cloudy-night.svg","img/clouds.svg","img/sun.svg","img/thunderstorm.svg","reducers/index.js","components/Header.js","actions/index.js","components/CurrentWeather.js","components/HourForecast.js","components/HourlyForecast.js","components/DailyForecast.js","components/WeeklyForecast.js","components/App.js","index.js","img/snow.svg"],"names":["module","exports","combineReducers","currentDate","state","action","type","payload","currentHours","days","currentWeather","hourlyForecast","userInput","Header","props","getWeather","zipcode","getCustomCurrentWeather","getCustomHourlyForecast","textInput","React","createRef","this","getCurrentDate","className","currentCity","placeholder","ref","onKeyUp","updateZipcode","current","value","onClick","Component","connect","name","moment","format","dispatch","a","axios","get","data","list","CurrentWeather","getCurrentWeather","weatherIcon","sunnyIcon","moonIcon","partlyCloudyIcon","partlyCloudyNightIcon","cloudsIcon","rainIcon","thunderstormIcon","snowIcon","src","alt","currentTemp","currentCondition","highTemp","wind","sunrise","lowTemp","humidity","sunset","sunriseString","sunsetString","main","Date","sys","toLocaleTimeString","split","splice","join","toLowerCase","Math","floor","temp","weather","description","temp_max","temp_min","speed","icon","hourForecast","hour","temperature","HourlyForecast","getHourlyForecast","getCurrentHours","currentTemps","map","index","HourForecast","add","dailyForecast","day","WeeklyForecast","getWeeklyForecast","daily","DailyForecast","ceil","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5e44dc58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rain.c59a6525.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.ab4f3dc9.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.ee81fe3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-night.dc0f2f9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/clouds.3626d665.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.240fa36a.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm.926dad6d.svg\";","import { combineReducers } from 'redux';\n\nconst dateReducer = (state='', action) => {\n    switch(action.type) {\n        case 'GET_DATE':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nconst hourReducer = (state=[], action) => {\n    switch (action.type) {\n        case 'GET_HOURS':\n            return action.payload;\n        default: \n            return state;\n    }\n};\n\nconst dayReducer = (state=[], action) => {\n    switch (action.type) {\n        case 'GET_DAYS':\n            return action.payload;\n        default: \n            return state;\n    }\n};\n\nconst currentWeatherReducer = (state={}, action) => {\n    switch(action.type) {\n        case 'GET_CURRENT_WEATHER':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nconst hourlyForecastReducer = (state=[], action) => {\n    switch(action.type) {\n        case 'GET_HOURLY':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nconst userInputReducer = (state='', action) => {\n    switch(action.type) {\n        case 'GET_INPUT':\n            return action.payload   \n        default:\n            return state;\n    };\n};\n\nexport default combineReducers({\n    currentDate: dateReducer,\n    currentHours: hourReducer,\n    days: dayReducer,\n    currentWeather: currentWeatherReducer,\n    hourlyForecast: hourlyForecastReducer,\n    userInput: userInputReducer\n});","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getCurrentDate, getCustomCurrentWeather, getCustomHourlyForecast, updateZipcode } from '../actions';\n\nimport '../css/header.css';\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textInput = React.createRef();\n    }\n\n    componentDidMount() {\n        this.props.getCurrentDate();\n    }\n\n    getWeather = (zipcode) => {\n        this.props.getCustomCurrentWeather(zipcode);\n        this.props.getCustomHourlyForecast(zipcode);\n    };\n\n    render() {\n        return (\n            <div className='header'>\n                <div className='headerMain'>\n                    <h1>{this.props.currentCity}</h1>\n                    <h3>{ this.props.currentDate }</h3>\n                </div>\n                <div className='headerInput'>\n                    <input type='text' \n                           placeholder='Enter zipcode' \n                           ref={this.textInput} \n                           onKeyUp={() => {this.props.updateZipcode(this.textInput.current.value)}} />\n                    <button onClick={() => {this.getWeather(this.props.userInput)}}>Get Weather</button>\n                </div>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        currentDate: state.currentDate,\n        currentCity: state.currentWeather.name,\n        userInput: state.userInput\n    }\n};\n\nexport default connect(mapStateToProps, {\n    getCurrentDate,\n    getCustomCurrentWeather,\n    getCustomHourlyForecast,\n    updateZipcode\n})(Header);","import moment from 'moment';\nimport axios from 'axios';\n\nexport const getCurrentDate = () => {\n    return {\n        type: 'GET_DATE',\n        payload: moment().format('dddd D MMMM')\n    }\n}\n\nexport const getCurrentHours = () => {\n    return {\n        type: 'GET_HOURS',\n        payload: [ \n            moment().format('ha'),\n            moment().add(3, 'hour').format('ha'), \n            moment().add(6, 'hour').format('ha'), \n            moment().add(9, 'hour').format('ha'),\n            moment().add(12, 'hour').format('ha'),\n            moment().add(15, 'hour').format('ha')\n        ]\n    };\n};\n\nexport const getWeeklyForecast = () => {\n    return {\n        type: 'GET_DAYS',\n        payload: [ \n            moment().add(1, 'days').format('dddd'), \n            moment().add(2, 'days').format('dddd'),\n            moment().add(3, 'days').format('dddd'),\n            moment().add(4, 'days').format('dddd'),\n            moment().add(5, 'days').format('dddd')\n        ]\n    }\n};\n\nexport const getCurrentWeather = () => {\n    return async (dispatch) => {\n        const data = await axios.get('http://api.openweathermap.org/data/2.5/weather?zip=28205&appid=207ac0eddd67fa374f18b49fb01aa66f&units=imperial');\n        dispatch({ type: 'GET_CURRENT_WEATHER', payload: data.data });\n    };\n};\n\nexport const getCustomCurrentWeather = (zipcode) => {\n    return async (dispatch) => {\n        const data = await axios.get(`http://api.openweathermap.org/data/2.5/weather?zip=${zipcode}&appid=207ac0eddd67fa374f18b49fb01aa66f&units=imperial`);\n        dispatch({ type: 'GET_CURRENT_WEATHER', payload: data.data });\n    };\n};\n\nexport const getHourlyForecast = () => {\n    return async (dispatch) => {\n        const data = await axios.get('http://api.openweathermap.org/data/2.5/forecast?zip=28205&appid=207ac0eddd67fa374f18b49fb01aa66f&units=imperial');\n        dispatch({ type: 'GET_HOURLY', payload: data.data.list });\n    };\n};\n\nexport const getCustomHourlyForecast = (zipcode) => {\n    return async (dispatch) => {\n        const data = await axios.get(`http://api.openweathermap.org/data/2.5/forecast?zip=${zipcode}&appid=207ac0eddd67fa374f18b49fb01aa66f&units=imperial`);\n        dispatch({ type: 'GET_HOURLY', payload: data.data.list });\n    };\n};\n\nexport const updateZipcode = (userInput) => {\n    return {\n        type: 'GET_INPUT',\n        payload: userInput\n    };\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getCurrentWeather } from '../actions';\nimport '../css/currentWeather.css';\n\nimport sunnyIcon from '../img/sun.svg';\nimport moonIcon from '../img/moon.svg';\nimport cloudsIcon from '../img/clouds.svg';\nimport partlyCloudyIcon from '../img/cloudy.svg';\nimport partlyCloudyNightIcon from '../img/cloudy-night.svg';\nimport rainIcon from '../img/rain.svg';\nimport thunderstormIcon from '../img/thunderstorm.svg';\nimport snowIcon from '../img/snow.svg';\n\nclass CurrentWeather extends React.Component {\n    componentDidMount() {\n        this.props.getCurrentWeather();\n    }\n\n    render() {\n        let weatherIcon;\n        switch(this.props.weatherIcon) {\n            case '01d':\n                weatherIcon = sunnyIcon;\n                break;\n            case '01n':\n                weatherIcon = moonIcon;\n                break;\n            case '02d':\n                weatherIcon = partlyCloudyIcon;\n                break;\n            case '02n':\n                weatherIcon = partlyCloudyNightIcon;\n                break;\n            case '03d': \n                weatherIcon = cloudsIcon;\n                break;\n            case '03n':\n                weatherIcon = cloudsIcon;\n                break;\n            case '04d':\n                weatherIcon = cloudsIcon;\n                break;\n            case '04n':\n                weatherIcon = cloudsIcon;\n                break;\n            case '09d':\n                weatherIcon = rainIcon;\n                break;\n            case '09n':\n                weatherIcon = rainIcon;\n                break;\n            case '10d':\n                weatherIcon = rainIcon;\n                break;\n            case '10n':\n                weatherIcon = rainIcon;\n                break;\n            case '11d':\n                weatherIcon = thunderstormIcon;\n                break;\n            case '11n':\n                weatherIcon = thunderstormIcon;\n                break;\n            case '13d':\n                weatherIcon = snowIcon;\n                break;\n            case '13n':\n                weatherIcon = snowIcon;\n                break;\n            case '50d':\n                weatherIcon = rainIcon;\n                break;\n            case '50n':\n                weatherIcon = rainIcon; \n                break;\n            default:\n                weatherIcon = sunnyIcon;\n        }\n\n        return (\n            <div className='currentWeather'>\n                <div className='currentWeatherMain'>\n                    <img src={weatherIcon} alt='Weather Icon'/>\n                    <div className='currentTemp'>\n                        <h1>{this.props.currentTemp}&deg;</h1>\n                        <h5>{this.props.currentCondition}</h5>\n                    </div> {/* .currentTemp end */}\n                </div> {/* .currentMain end */}\n                <div className='currentWeatherAside'>\n                    <ul className='conditionsList'>\n                        <li className='conditionItem'>\n                            <h3>{this.props.highTemp}&deg;</h3>\n                            <h5>High</h5>\n                        </li>\n                        <li className='conditionItem'>\n                            <h3>{this.props.wind}mph</h3>\n                            <h5>Wind</h5>\n                        </li>\n                        <li className='conditionItem'>\n                            <h3>{this.props.sunrise}</h3>\n                            <h5>Sunrise</h5>\n                        </li>\n                        <li className='conditionItem'>\n                            <h3>{this.props.lowTemp}&deg;</h3>\n                            <h5>Low</h5>\n                        </li>\n                        <li className='conditionItem'>\n                            <h3>{this.props.humidity}%</h3>\n                            <h5>Humidity</h5>\n                        </li>\n                        <li className='conditionItem'>\n                            <h3>{this.props.sunset}</h3>\n                            <h5>Sunset</h5>\n                        </li>\n                    </ul>\n                </div> {/* .currentAside end */}\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    let sunriseString;\n    let sunsetString;\n    if(state.currentWeather.main) {\n        let sunrise = new Date(state.currentWeather.sys.sunrise * 1000).toLocaleTimeString().split('');\n        sunrise.splice(4,4);\n        sunriseString = sunrise.join('').toLowerCase();\n\n        let sunset = new Date(state.currentWeather.sys.sunset * 1000).toLocaleTimeString().split('');\n        sunset.splice(4,4);\n        sunsetString = sunset.join('').toLowerCase();\n    }\n\n    if(state.currentWeather.main) {\n        return {\n            currentTemp: Math.floor(state.currentWeather.main.temp),\n            currentCondition: state.currentWeather.weather[0].description,\n            highTemp: Math.floor(state.currentWeather.main.temp_max),\n            lowTemp: Math.floor(state.currentWeather.main.temp_min),\n            wind: Math.floor(state.currentWeather.wind.speed),\n            humidity: state.currentWeather.main.humidity,\n            sunrise: sunriseString,\n            sunset: sunsetString,\n            weatherIcon: state.currentWeather.weather[0].icon,\n        };\n    } else {\n        return {};\n    }\n};\n\nexport default connect(mapStateToProps, {\n    getCurrentWeather\n})(CurrentWeather);","import React from 'react';\n\nconst hourForecast = ({ hour, temperature, weatherIcon }) => {\n    return (\n        <li className='hourlyForecastListItem'>\n            <h3>{hour}</h3>\n            <img src={weatherIcon} alt='Weather Icon'/>\n            <h5>{temperature}&deg;</h5>\n        </li>\n    );\n};\n\nexport default hourForecast;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport HourForecast from '../components/HourForecast';\nimport { getCurrentHours, getHourlyForecast } from '../actions';\nimport '../css/hourlyForecast.css';\n\nimport sunnyIcon from '../img/sun.svg';\nimport moonIcon from '../img/moon.svg';\nimport cloudsIcon from '../img/clouds.svg';\nimport partlyCloudyIcon from '../img/cloudy.svg';\nimport partlyCloudyNightIcon from '../img/cloudy-night.svg';\nimport rainIcon from '../img/rain.svg';\nimport thunderstormIcon from '../img/thunderstorm.svg';\nimport snowIcon from '../img/snow.svg';\n\nclass HourlyForecast extends React.Component {\n    componentDidMount() {\n        this.props.getHourlyForecast();\n        this.props.getCurrentHours();\n    }\n\n    render() {\n        let hourlyForecast;\n        if( this.props.currentHours && this.props.currentTemps[0] ) {\n            hourlyForecast = this.props.currentHours.map((hour, index) => {\n                let weatherIcon;\n                switch(this.props.currentTemps[index].weather[0].icon) {\n                    case '01d':\n                        weatherIcon = sunnyIcon;\n                        break;\n                    case '01n':\n                        weatherIcon = moonIcon;\n                        break;\n                    case '02d':\n                        weatherIcon = partlyCloudyIcon;\n                        break;\n                    case '02n':\n                        weatherIcon = partlyCloudyNightIcon;\n                        break;\n                    case '03d': \n                        weatherIcon = cloudsIcon;\n                        break;\n                    case '03n':\n                        weatherIcon = cloudsIcon;\n                        break;\n                    case '04d':\n                        weatherIcon = cloudsIcon;\n                        break;\n                    case '04n':\n                        weatherIcon = cloudsIcon;\n                        break;\n                    case '09d':\n                        weatherIcon = rainIcon;\n                        break;\n                    case '09n':\n                        weatherIcon = rainIcon;\n                        break;\n                    case '10d':\n                        weatherIcon = rainIcon;\n                        break;\n                    case '10n':\n                        weatherIcon = rainIcon;\n                        break;\n                    case '11d':\n                        weatherIcon = thunderstormIcon;\n                        break;\n                    case '11n':\n                        weatherIcon = thunderstormIcon;\n                        break;\n                    case '13d':\n                        weatherIcon = snowIcon;\n                        break;\n                    case '13n':\n                        weatherIcon = snowIcon;\n                        break;\n                    case '50d':\n                        weatherIcon = rainIcon;\n                        break;\n                    case '50n':\n                        weatherIcon = rainIcon; \n                        break;\n                    default:\n                        weatherIcon = sunnyIcon;\n                }\n                \n                return <HourForecast\n                            hour={hour}\n                            weatherIcon={weatherIcon}\n                            temperature={Math.floor(this.props.currentTemps[index].main.temp)}\n                        />\n                });\n        }\n\n        return (\n            <div className='hourlyForecast'>\n                <h1>Hourly Forecast</h1>\n                <ul className='hourlyForecastList'>\n                    { hourlyForecast ? hourlyForecast : null }\n                </ul>\n            </div>\n        );\n    }   \n};\n\nconst mapStateToProps = (state) => {\n    return {\n        currentHours: state.currentHours,\n        currentTemps: state.hourlyForecast,\n    } \n};\n\nexport default connect(mapStateToProps, {\n    getCurrentHours,\n    getHourlyForecast\n})(HourlyForecast);\n\n","import React from 'react';\n\nconst dailyForecast = (props) => {\n    return (\n        <li className='weeklyForecastListItem'>\n            <h5 className='day'>{props.day}</h5>\n            <img src={props.weatherIcon} alt='Weather Icon' />\n            <div className='lowTemp'>\n                <h4>{props.lowTemp}&deg;</h4>\n                <h5>Low</h5>\n            </div>\n            <div className='highTemp'>\n                <h4>{props.highTemp}&deg;</h4>\n                <h5>High</h5>\n            </div>\n            <div className='wind'>\n                <h4>{props.wind}mph</h4>\n                <h5>Wind</h5>\n            </div>\n            <div className='rain'>\n                <h4>{props.humidity}%</h4>\n                <h5>Humidity</h5>\n            </div>\n        </li>\n    );\n};\n\nexport default dailyForecast;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport DailyForecast from '../components/DailyForecast';\nimport { getWeeklyForecast } from '../actions';\nimport '../css/weeklyForecast.css';\n\nimport sunnyIcon from '../img/sun.svg';\nimport moonIcon from '../img/moon.svg';\nimport cloudsIcon from '../img/clouds.svg';\nimport partlyCloudyIcon from '../img/cloudy.svg';\nimport partlyCloudyNightIcon from '../img/cloudy-night.svg';\nimport rainIcon from '../img/rain.svg';\nimport thunderstormIcon from '../img/thunderstorm.svg';\nimport snowIcon from '../img/snow.svg';\n\nclass WeeklyForecast extends React.Component { \n    componentDidMount() {\n        this.props.getWeeklyForecast();\n    }\n\n    render() {\n        let daily;\n        if( this.props.currentTemps[1] ) {\n            daily = this.props.days.map((day, index) => {\n                let weatherIcon;\n                switch(this.props.currentTemps[index].weather[0].icon) {\n                    case '01d':\n                        weatherIcon = sunnyIcon;\n                        break;\n                    case '01n':\n                        weatherIcon = moonIcon;\n                        break;\n                    case '02d':\n                        weatherIcon = partlyCloudyIcon;\n                        break;\n                    case '02n':\n                        weatherIcon = partlyCloudyNightIcon;\n                        break;\n                    case '03d': \n                        weatherIcon = cloudsIcon;\n                        break;\n                    case '03n':\n                        weatherIcon = cloudsIcon;\n                        break;\n                    case '04d':\n                        weatherIcon = cloudsIcon;\n                        break;\n                    case '04n':\n                        weatherIcon = cloudsIcon;\n                        break;\n                    case '09d':\n                        weatherIcon = rainIcon;\n                        break;\n                    case '09n':\n                        weatherIcon = rainIcon;\n                        break;\n                    case '10d':\n                        weatherIcon = rainIcon;\n                        break;\n                    case '10n':\n                        weatherIcon = rainIcon;\n                        break;\n                    case '11d':\n                        weatherIcon = thunderstormIcon;\n                        break;\n                    case '11n':\n                        weatherIcon = thunderstormIcon;\n                        break;\n                    case '13d':\n                        weatherIcon = snowIcon;\n                        break;\n                    case '13n':\n                        weatherIcon = snowIcon;\n                        break;\n                    case '50d':\n                        weatherIcon = rainIcon;\n                        break;\n                    case '50n':\n                        weatherIcon = rainIcon; \n                        break;\n                    default:\n                        weatherIcon = sunnyIcon;\n                }\n                return <DailyForecast \n                            day={day}\n                            weatherIcon={weatherIcon}\n                            highTemp={Math.ceil(this.props.currentTemps[index + 3].main.temp_max)}\n                            lowTemp={Math.floor(this.props.currentTemps[index + 3].main.temp_min)}\n                            wind={Math.floor(this.props.currentTemps[index + 3].wind.speed)}\n                            humidity={Math.floor(this.props.currentTemps[index + 3].main.humidity)}\n                        />\n            });\n        }\n\n        return (\n            <div className='weeklyForecast'>\n                <h1>Next 5 Days</h1>\n                <ul className='weeklyForecastList'>\n                    { daily ? daily : null}\n                </ul>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        days: state.days,\n        currentTemps: state.hourlyForecast\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getWeeklyForecast\n})(WeeklyForecast);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from '../reducers';\n\nimport Header from './Header';\nimport CurrentWeather from './CurrentWeather';\nimport HourlyForecast from './HourlyForecast';\nimport WeeklyForecast from './WeeklyForecast';\n\nimport '../css/main.css';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <div className='app'>\n                <Header />\n                <CurrentWeather />\n                <HourlyForecast />\n                <WeeklyForecast />\n            </div>\n        </Provider>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));","module.exports = __webpack_public_path__ + \"static/media/snow.66fc4ff7.svg\";"],"sourceRoot":""}